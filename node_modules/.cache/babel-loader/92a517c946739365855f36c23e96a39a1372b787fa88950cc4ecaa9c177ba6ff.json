{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marzo\\\\OneDrive\\\\Desktop\\\\Fillm web\\\\film\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import {useEffect, useState} from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/navBar/navBar';\nimport Films from './components/FilmsCard/Films';\nimport FilmList from './components/FilmList/FilmList';\nimport FilmDetail from './components/FilmDetail/FilmDetail';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [option, setOption] = useState('movie');\n  const [language, setLanguage] = useState('an');\n  const [page, setPage] = useState('1');\n  const [totalPageNumber, setTotalPageNumber] = useState();\n  const getData = async () => {\n    try {\n      const response = await axios.get(`https://api.themoviedb.org/3/discover/${option}?api_key=d0479c49cb948d6ad0bb103813fe9e3c&language=${language}-US&page=${page}`);\n      //  https://api.themoviedb.org/3/movie/popular?api_key=d0479c49cb948d6ad0bb103813fe9e3c&language=en-US&page1\n      // `https://api.themoviedb.org/3/discover/movie?api_key=d0479c49cb948d6ad0bb103813fe9e3c&language=en-US&page1`\n      setItems(response.data.results);\n      setTotalPageNumber(response.data.total_pages);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  let linkImg = \"https://image.tmdb.org/t/p/w500\";\n  useEffect(() => {\n    getData();\n    console.log(items);\n  }, [option, language, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      setItems: setItems,\n      getData: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(FilmList, {\n            items: items,\n            linkImg: linkImg,\n            option: option,\n            setOption: setOption,\n            setLanguage: setLanguage,\n            setPage: setPage,\n            totalPageNumber: totalPageNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:id\",\n          element: /*#__PURE__*/_jsxDEV(FilmDetail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"OW0PeQrt2l81GOyLtHPbx9yMJ98=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NavBar","Films","FilmList","FilmDetail","Routes","Route","BrowserRouter","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","items","setItems","useState","option","setOption","language","setLanguage","page","setPage","totalPageNumber","setTotalPageNumber","getData","response","get","data","results","total_pages","err","console","error","linkImg","useEffect","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/marzo/OneDrive/Desktop/Fillm web/film/src/App.js"],"sourcesContent":["// import {useEffect, useState} from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/navBar/navBar'\nimport Films from './components/FilmsCard/Films'\nimport FilmList from './components/FilmList/FilmList'\nimport FilmDetail from './components/FilmDetail/FilmDetail'\nimport {Routes , Route , BrowserRouter} from 'react-router-dom'\n\nimport axios from 'axios'\n\nfunction App() {\n\n  const [ items , setItems ] = useState([])\n  const [ option , setOption ] = useState('movie')\n  const [ language , setLanguage ] = useState('an')\n  const [ page , setPage ] = useState('1')\n  const [ totalPageNumber , setTotalPageNumber ] = useState()\n  \n\n  const getData = async()=>{\n\n    try{\n     const response = await axios.get(`https://api.themoviedb.org/3/discover/${option}?api_key=d0479c49cb948d6ad0bb103813fe9e3c&language=${language}-US&page=${page}`)\n              //  https://api.themoviedb.org/3/movie/popular?api_key=d0479c49cb948d6ad0bb103813fe9e3c&language=en-US&page1\n              // `https://api.themoviedb.org/3/discover/movie?api_key=d0479c49cb948d6ad0bb103813fe9e3c&language=en-US&page1`\n    setItems(response.data.results)\n    setTotalPageNumber(response.data.total_pages)\n    \n    \n  \n    }catch(err){\n      console.error(err)\n    }\n  }\n\n  let linkImg = \"https://image.tmdb.org/t/p/w500\"\n\n  useEffect(()=>{\n    getData()\n\n    console.log(items);\n    \n  }, [option , language , page])\n\n\n\n  return (\n    <>\n      <NavBar setItems={setItems} getData={getData} />\n      <BrowserRouter>\n        <Routes>\n          <Route path='/' element={<FilmList items={items} linkImg={linkImg} option={option} setOption={setOption} setLanguage={setLanguage} setPage={setPage} totalPageNumber={totalPageNumber} />} />\n         \n          <Route path='/movie/:id' element={<FilmDetail />} />\n            \n         \n        </Routes>\n      </BrowserRouter>  \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}